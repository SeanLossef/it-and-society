This weeks reading made some very interesting arguments about the weaponizing of planned obsolescence. The idea really stems from WWII and the need for modernization of certain technologies. In a time when security was very important, it also seemed important that everything remain updated. America must have the most updated security, newest missiles, and must stay ahead of the USSR. Throw away culture can be seen at this time in the manufacturing of silicon chips and the development of computing. Computers in the past have been very prone to obsolescence, arguably way more than the average technology. This is because of Moore's Law and the fact that the technology has been changing so incredibly quickly. Add to that, software is designed in a way that older systems cannot run new software. If you do not have a computer built in the last.5 years you generally cannot run most modern programs. The question is about why this occurs and possibly is it planned? We would not be surprised if hardware companies like Apple built there computers to fail after that 5 year gap, as it creates sales for them on a regular basis. But Apple is not the only software developer, so there must be more at play. But why would the vast collection of developers all need updated hardware to run their software. If I was able to browse the Internet quickly 5 years ago, why does my Chrome browser run so slowly on my old computer now? It seems that nothing should have changed. I think it is interesting to note that pretty much all software is written using the dependency model, where that code requires the addition installation of software written by other people. This explains why the problem is so widespread. As the dependencies get updated, more and more code gets added to them, and suddenly my small program is requiring huge amounts of code to run. There are likely lots of inefficiencies in the process... ie, code that isn't necessary for the running of most things, but is included anyway since it is so simple, and modern computers can run it just fine.